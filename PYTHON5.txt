Strings In computer programming, a string is an ordered sequence of characters. Strings are immutable i.e. cannot be modified after being created. We use single quotes or double quotes to represent a string in Python. Defining Strings We use single quotes or double quotes to represent a string in Python. It can be a span of multiple lines of text.String Immutability Test In python, the string data types are immutable. Which means a string value cannot be updated. We can verify this by trying to update a part of the string which will led us to an error. We can further verify this by checking the memory location address of the position of the letters of the string. String Concatenation String concatenation means add strings together or Concatenation is the process of appending one string to the end of another string. Itâ€™s very easy to use + operator for string concatenation. However, the arguments must be a string. String Multiplication We can create multiple copies of a string in Python by using multiplication operator or asterisks symbol. When you multiply a string by an integer, Python returns a new string. This new string is the original string, repeated X number of times (where X is the value of the integer). We use that because, Printing the same string can be time consuming String Length To get the length of a string, use the len function. It determines how many characters are there in the string including punctuation, space, and all type of special characters String Indexing Indexing is used to obtain individual elements. String indexing in Python is zero-based. The first character in the string has index 0 , the next has index 1 , and so on. The index of the last character will be the length of the string minus one. String indices can also be specified with negative numbers, in which case indexing occurs from the end of the string backward.  -1 refers to the last character, -2 the second-to-last character, and so on. String SlicingThe technique to extract substrings from a string using indexing is called string slicing. The slicing starts with the start position index (included) and ends at end position index (excluded). The step parameter is used to specify the steps to take from start to end index. List Lists are used to store multiple items or used to store collections of data in a single variable. Lists are created using square brackets. Lists are ordered sequences of objects and they are mutable i.e. their content can be changed after creation. Accessing List Elements You can access the list items by referring to the index number of that item. Just like strings indexing starts from zero. Nested Lists Lists can be embedded inside lists. Multiple nesting is also supported. A list can contain any sort object, even another list or sublist, which in turn can contain sublists themselves, and so on. This is known as nested list. Or it allows a list to contain multiple sublists within itself. List Mutability Test List mutability in Python means that one can change an item present in a list by accessing it directly as part of the assignment statement. Furthermore, one can update one of the list items by using the indexing operator on the left side of an assignment. Append to List Append can add only one element at the end of a list at a time. This method adds an additional element to the end of an already existing list. Extend List It is the method for adding all contents of one list to another. We can use Extend method instead of Append when we need to add multiple item inside a list. Insert to List Using insert method we can add an element at a given position in the list and can add only one element at a time. There are we have to mention. First argument specifies the position and second argument specifies the element to be inserted. Remove from List It is used to remove an element from the list. We have to specify the item in the remove method to remove that item from the list. In the case of multiple occurrences, only the first is removed. Pop from List Pop method can remove an element from any position in the list. It removes item using index number. Element is not specified like in REMOVE method, only the index position. Remove vs. Pop REMOVE removes element by identification where POP removes by using index. List Slicing It is used to extract a sub-section of the list. Here index access works like string indexing and slicing. Reverse a List It is used to reverse the elements of a list. Can be done in two ways. First, modify the original list using reverse keyword. Second, without modifying the original list USING Slicing. Length of a List Using len keyword we can determine length of a list. It returns the number of elements in the list Min & Max Values of a List The max function returns the maximum value in the list. Where min function returns the minimum value in the list. Note that both methods accept only homogeneous lists i.e. list having elements of similar data type. Count of an Element in a List Count method returns the number of occurrences of a given element in the list Concatenate Lists It is used to merge two lists and return a single list. Or it add two lists using addition symbol. Multiply List Content It allows duplicating the list n times. Where, the resultant list is the original list iterated n times. Like normal multiplication we use asterisks symbol here. Location of the First Occurrence To check the position of the first occurrence of the given element use use index method. We can pass only one item here. And also if we want we can mention optional parameters. These are the begin index and the end index. When optional arguments are given, the element is searched only in the sub-list bound by the begin and end indices and when not supplied, the element is searched in the whole list. Sort a List in Place Sort method sorts the list in ascending order. It can only be performed on homogeneous lists, i.e. lists having elements of similar data type. Create copy of Sorted List Sort method sorts the list in ascending order. And also we can leave the original list unsorted but create a new list with sorted items. Erase List Content We use clear method to Remove all elements or items from a list. Tuple Tuples are used to store multiple items or used to store collections of data in a single variable. We may use parenthesis to create a tuple variable. Tuples are ordered sequences of objects and they are immutable i.e. their content cannot be changed after creation. Indexing in Tuples Indexing is used to obtain individual elements. Tuple indexing in Python is zero-based. The first item in the string has index 0 , the next has index 1 , and so on. The index of the last item will be the length of the tuple minus one. Tuple indices can also be specified with negative numbers, in which case indexing occurs from the end of the string backward.  -1 refers to the last item, -2 the second-to-last item, and so on. Tuple Immutability Test The values of immutable objects do not change. Once we've declared the contents of a tuple, we can't modify the contents of that tuple. If we try to change it throws error. Concatenation of Tuples Tuples are immutable, hence the data stored in a tuple cannot be edited but it's definitely possible to merge two tuples to create a new tuple using addition symbol. Multiplication or Duplication of Tuples It duplicates the content of a tuple, the specified number of times. Where, the resultant tuple is the original tuple iterated the specified number of times. Like normal multiplication we use asterisks symbol here. Length of a Tuple Using len keyword we can determine length of a Tuple. It returns the number of elements in the Tuple. Min & Max Values of a Tuple The max function returns the maximum value in the tuple. Where min function returns the minimum value in the tuple. Note that both methods accept only homogeneous tuple i.e. tuple having elements of similar data type. Count of an Element in a Tuple Count method returns the number of occurrences of a given element in the tuple. Location of First Occurrence To check the position of the first occurrence of the given element use use index method. We can pass only one item here. Delete a Tuple As Tuple is immutable we cannot modify it or remove the elements in a tuple after creation but we can delete the entire tuple. Identity Operators It is used to compare objects. Not only if they are equal but also if they are actually the same object with the same memory location. There are two Identity Operators, is and is not. Membership Operators It is used to test if a sequence has specified object or item in present it or not. There are two Membership operators, in and not in.